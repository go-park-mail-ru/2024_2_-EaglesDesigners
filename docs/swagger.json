{
    "swagger": "2.0",
    "info": {
        "description": "This is a description of the Patefon server.",
        "title": "Swagger Patefon API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "212.233.98.59:8080",
    "basePath": "/",
    "paths": {
        "/auth": {
            "get": {
                "description": "Retrieve user data based on the JWT token present in the cookies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate a user",
                "responses": {
                    "200": {
                        "description": "User data retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AuthResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: token is invalid",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve the list of chats for the authenticated user based on their access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Get user chats",
                "responses": {
                    "200": {
                        "description": "List of chats",
                        "schema": {
                            "$ref": "#/definitions/model.ChatsDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized, no valid access token",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate a user with username and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Credentials for login, including username and password",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AuthCredentials"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Authentication successful",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid format JSON",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Incorrect login or password",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Invalidate the user's session by clearing the access token cookie.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out a user",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "No access token found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Creates a new user with the provided credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration information",
                        "name": "creds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.RegisterCredentials"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "schema": {
                            "$ref": "#/definitions/utils.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "User failed to create",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "A user with that username already exists",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "model.Chat": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string",
                    "example": "https://yandex-images.clstorage.net/bVLC53139/667e899dbzgI/Lec3og97oM2J8jgAbwmbs1UEQ_j2WQe6H7Tz0tGHlNUDiLp06xNO9LooehtZCLyucrVfOV3bNS1vNvr_fMoMLbniE8frC6CczUKcwc_ImueU0HKs18lHz490gERWwAOWtD4IttmRuiGPuG9PrfwYeJTUCT5PeyM6mMdYuXvvucreJwTwaprjvy1RSHHf2XlUxVagbjT_Z3s54KP1tiFyt1ZNSQbbE3rzTsqefIsOGIsUYXo-bNgSKZq1WSlJDWhoz9XEo5uL4K6ts3gATet5lVTXMkxWjOY7KIFDVJZywRQU_5pGKzNLwd44T06oTSlJF8LpfEw5cni4VlkKqL3pur7HtGJr6fJM_7N44i2JKwV39mKvRF_0WggAkvaH0qM3dF3rRmhTySM-KU0umyyYWiVw2A7POeGIuvaYeurMKuh91cfSm1uT3gyRmwOOe-pFVEUzzFSupwioEVOHBbBzZ2Tv-6XKcnrQn8kvjEot-5skUlksz1lzKIsGKytJHes6zpeFgbqbE_-fI5hA_TpqVeemkPzm7qcL-UCy5NVyUTYUrfi2K2JIwT85fHzLzVhIFiBIH-9b0Xt45-m5aDwpWu_VtENpCtPcbhE7gL9aisTlNiP8hE2kW1qwEiTkwILXxe9adbgRuvDt6U59ag4qWbVyOm7eG4Nq2QW5mTveSXpcdzTz-TmS_F8iiCEc6Or0JvZy3ldd9-q7MMEWl-FS5YT_GUTZQQqiztuNzust-xr0cJjMzfuSmqqlyvuIPKlJbadlI-l7IS6vUWixLdt6p1dG0dy3bMdYunPBRcWioYYX3BsV2fP7oq26jA6YvgmLxQKqnr_IU0tJJ4greQw5Sp0HhdFYu4DeXGFbEF3JOWb3ZIJvR851WQnhM2UX8VKF983KBAoDOOK9qp1_aC9YK0WCa_8P-UGZ2Eaqy5s9C4qsNofD6Rkg3qyRGCPveNplxMSyzjbctEk5w6C2k"
                },
                "chatId": {
                    "type": "integer",
                    "example": 1
                },
                "chatName": {
                    "type": "string",
                    "example": "Чат с пользователем 2"
                },
                "chatType": {
                    "description": "@Enum [personalMessages, group, channel]",
                    "type": "string",
                    "example": "personalMessages"
                },
                "lastMessage": {
                    "type": "string",
                    "example": "Когда за кофе?"
                },
                "usersId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                }
            }
        },
        "model.ChatsDTO": {
            "type": "object",
            "properties": {
                "chats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Chat"
                    }
                }
            }
        },
        "utils.AuthCredentials": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "example": "user11"
                }
            }
        },
        "utils.AuthResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/utils.UserData"
                }
            }
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "utils.RegisterCredentials": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Vincent Vega"
                },
                "password": {
                    "type": "string",
                    "example": "go_do_a_crime"
                },
                "username": {
                    "type": "string",
                    "example": "killer1994"
                }
            }
        },
        "utils.RegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Registration successful"
                },
                "user": {
                    "$ref": "#/definitions/utils.UserData"
                }
            }
        },
        "utils.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "utils.UserData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 2
                },
                "name": {
                    "type": "string",
                    "example": "Dr Peper"
                },
                "username": {
                    "type": "string",
                    "example": "user12"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}