// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package model

import (
	json "encoding/json"
	models "github.com/go-park-mail-ru/2024_2_EaglesDesigner/main_app/internal/messages/models"
	uuid "github.com/google/uuid"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels(in *jlexer.Lexer, out *UserInChatDTO) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.ID).UnmarshalText(data))
			}
		case "username":
			out.Username = string(in.String())
		case "name":
			if in.IsNull() {
				in.Skip()
				out.Name = nil
			} else {
				if out.Name == nil {
					out.Name = new(string)
				}
				*out.Name = string(in.String())
			}
		case "avatarURL":
			if in.IsNull() {
				in.Skip()
				out.AvatarPath = nil
			} else {
				if out.AvatarPath == nil {
					out.AvatarPath = new(string)
				}
				*out.AvatarPath = string(in.String())
			}
		case "role":
			if in.IsNull() {
				in.Skip()
				out.Role = nil
			} else {
				if out.Role == nil {
					out.Role = new(string)
				}
				*out.Role = string(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels(out *jwriter.Writer, in UserInChatDTO) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.RawText((in.ID).MarshalText())
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		if in.Name == nil {
			out.RawString("null")
		} else {
			out.String(string(*in.Name))
		}
	}
	{
		const prefix string = ",\"avatarURL\":"
		out.RawString(prefix)
		if in.AvatarPath == nil {
			out.RawString("null")
		} else {
			out.String(string(*in.AvatarPath))
		}
	}
	{
		const prefix string = ",\"role\":"
		out.RawString(prefix)
		if in.Role == nil {
			out.RawString("null")
		} else {
			out.String(string(*in.Role))
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserInChatDTO) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserInChatDTO) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserInChatDTO) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserInChatDTO) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels1(in *jlexer.Lexer, out *UserInChatDAO) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ID":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.ID).UnmarshalText(data))
			}
		case "Username":
			out.Username = string(in.String())
		case "Name":
			if in.IsNull() {
				in.Skip()
				out.Name = nil
			} else {
				if out.Name == nil {
					out.Name = new(string)
				}
				*out.Name = string(in.String())
			}
		case "AvatarPath":
			if in.IsNull() {
				in.Skip()
				out.AvatarPath = nil
			} else {
				if out.AvatarPath == nil {
					out.AvatarPath = new(string)
				}
				*out.AvatarPath = string(in.String())
			}
		case "Role":
			if in.IsNull() {
				in.Skip()
				out.Role = nil
			} else {
				if out.Role == nil {
					out.Role = new(int)
				}
				*out.Role = int(in.Int())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels1(out *jwriter.Writer, in UserInChatDAO) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix[1:])
		out.RawText((in.ID).MarshalText())
	}
	{
		const prefix string = ",\"Username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"Name\":"
		out.RawString(prefix)
		if in.Name == nil {
			out.RawString("null")
		} else {
			out.String(string(*in.Name))
		}
	}
	{
		const prefix string = ",\"AvatarPath\":"
		out.RawString(prefix)
		if in.AvatarPath == nil {
			out.RawString("null")
		} else {
			out.String(string(*in.AvatarPath))
		}
	}
	{
		const prefix string = ",\"Role\":"
		out.RawString(prefix)
		if in.Role == nil {
			out.RawString("null")
		} else {
			out.Int(int(*in.Role))
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserInChatDAO) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserInChatDAO) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserInChatDAO) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserInChatDAO) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels1(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels2(in *jlexer.Lexer, out *SearchChatsDTO) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_chats":
			if in.IsNull() {
				in.Skip()
				out.UserChats = nil
			} else {
				in.Delim('[')
				if out.UserChats == nil {
					if !in.IsDelim(']') {
						out.UserChats = make([]ChatDTOOutput, 0, 0)
					} else {
						out.UserChats = []ChatDTOOutput{}
					}
				} else {
					out.UserChats = (out.UserChats)[:0]
				}
				for !in.IsDelim(']') {
					var v1 ChatDTOOutput
					(v1).UnmarshalEasyJSON(in)
					out.UserChats = append(out.UserChats, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "global_channels":
			if in.IsNull() {
				in.Skip()
				out.GlobalChannels = nil
			} else {
				in.Delim('[')
				if out.GlobalChannels == nil {
					if !in.IsDelim(']') {
						out.GlobalChannels = make([]ChatDTOOutput, 0, 0)
					} else {
						out.GlobalChannels = []ChatDTOOutput{}
					}
				} else {
					out.GlobalChannels = (out.GlobalChannels)[:0]
				}
				for !in.IsDelim(']') {
					var v2 ChatDTOOutput
					(v2).UnmarshalEasyJSON(in)
					out.GlobalChannels = append(out.GlobalChannels, v2)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels2(out *jwriter.Writer, in SearchChatsDTO) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_chats\":"
		out.RawString(prefix[1:])
		if in.UserChats == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v3, v4 := range in.UserChats {
				if v3 > 0 {
					out.RawByte(',')
				}
				(v4).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"global_channels\":"
		out.RawString(prefix)
		if in.GlobalChannels == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.GlobalChannels {
				if v5 > 0 {
					out.RawByte(',')
				}
				(v6).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SearchChatsDTO) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SearchChatsDTO) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SearchChatsDTO) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SearchChatsDTO) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels2(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels3(in *jlexer.Lexer, out *Event) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "action":
			out.Action = string(in.String())
		case "chatId":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.ChatId).UnmarshalText(data))
			}
		case "users":
			if in.IsNull() {
				in.Skip()
				out.Users = nil
			} else {
				in.Delim('[')
				if out.Users == nil {
					if !in.IsDelim(']') {
						out.Users = make([]uuid.UUID, 0, 4)
					} else {
						out.Users = []uuid.UUID{}
					}
				} else {
					out.Users = (out.Users)[:0]
				}
				for !in.IsDelim(']') {
					var v7 uuid.UUID
					if data := in.UnsafeBytes(); in.Ok() {
						in.AddError((v7).UnmarshalText(data))
					}
					out.Users = append(out.Users, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels3(out *jwriter.Writer, in Event) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix[1:])
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"chatId\":"
		out.RawString(prefix)
		out.RawText((in.ChatId).MarshalText())
	}
	{
		const prefix string = ",\"users\":"
		out.RawString(prefix)
		if in.Users == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Users {
				if v8 > 0 {
					out.RawByte(',')
				}
				out.RawText((v9).MarshalText())
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Event) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Event) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Event) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Event) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels3(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels4(in *jlexer.Lexer, out *DeleteUsersFromChatDTO) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "usersId":
			if in.IsNull() {
				in.Skip()
				out.UsersId = nil
			} else {
				in.Delim('[')
				if out.UsersId == nil {
					if !in.IsDelim(']') {
						out.UsersId = make([]uuid.UUID, 0, 4)
					} else {
						out.UsersId = []uuid.UUID{}
					}
				} else {
					out.UsersId = (out.UsersId)[:0]
				}
				for !in.IsDelim(']') {
					var v10 uuid.UUID
					if data := in.UnsafeBytes(); in.Ok() {
						in.AddError((v10).UnmarshalText(data))
					}
					out.UsersId = append(out.UsersId, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels4(out *jwriter.Writer, in DeleteUsersFromChatDTO) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"usersId\":"
		out.RawString(prefix[1:])
		if in.UsersId == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.UsersId {
				if v11 > 0 {
					out.RawByte(',')
				}
				out.RawText((v12).MarshalText())
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DeleteUsersFromChatDTO) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DeleteUsersFromChatDTO) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DeleteUsersFromChatDTO) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DeleteUsersFromChatDTO) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels4(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels5(in *jlexer.Lexer, out *DeletdeUsersFromChatDTO) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "deletedUsers":
			if in.IsNull() {
				in.Skip()
				out.DeletedUsers = nil
			} else {
				in.Delim('[')
				if out.DeletedUsers == nil {
					if !in.IsDelim(']') {
						out.DeletedUsers = make([]uuid.UUID, 0, 4)
					} else {
						out.DeletedUsers = []uuid.UUID{}
					}
				} else {
					out.DeletedUsers = (out.DeletedUsers)[:0]
				}
				for !in.IsDelim(']') {
					var v13 uuid.UUID
					if data := in.UnsafeBytes(); in.Ok() {
						in.AddError((v13).UnmarshalText(data))
					}
					out.DeletedUsers = append(out.DeletedUsers, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels5(out *jwriter.Writer, in DeletdeUsersFromChatDTO) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"deletedUsers\":"
		out.RawString(prefix[1:])
		if in.DeletedUsers == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v14, v15 := range in.DeletedUsers {
				if v14 > 0 {
					out.RawByte(',')
				}
				out.RawText((v15).MarshalText())
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DeletdeUsersFromChatDTO) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DeletdeUsersFromChatDTO) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DeletdeUsersFromChatDTO) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DeletdeUsersFromChatDTO) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels5(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels6(in *jlexer.Lexer, out *ChatsDTO) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "chats":
			if in.IsNull() {
				in.Skip()
				out.Chats = nil
			} else {
				in.Delim('[')
				if out.Chats == nil {
					if !in.IsDelim(']') {
						out.Chats = make([]ChatDTOOutput, 0, 0)
					} else {
						out.Chats = []ChatDTOOutput{}
					}
				} else {
					out.Chats = (out.Chats)[:0]
				}
				for !in.IsDelim(']') {
					var v16 ChatDTOOutput
					(v16).UnmarshalEasyJSON(in)
					out.Chats = append(out.Chats, v16)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels6(out *jwriter.Writer, in ChatsDTO) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"chats\":"
		out.RawString(prefix[1:])
		if in.Chats == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v17, v18 := range in.Chats {
				if v17 > 0 {
					out.RawByte(',')
				}
				(v18).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChatsDTO) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChatsDTO) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChatsDTO) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChatsDTO) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels6(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels7(in *jlexer.Lexer, out *ChatUpdateOutput) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "chatName":
			out.ChatName = string(in.String())
		case "updatedAvatarPath":
			out.Avatar = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels7(out *jwriter.Writer, in ChatUpdateOutput) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"chatName\":"
		out.RawString(prefix[1:])
		out.String(string(in.ChatName))
	}
	{
		const prefix string = ",\"updatedAvatarPath\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChatUpdateOutput) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChatUpdateOutput) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChatUpdateOutput) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChatUpdateOutput) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels7(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels8(in *jlexer.Lexer, out *ChatUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "chatName":
			out.ChatName = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels8(out *jwriter.Writer, in ChatUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"chatName\":"
		out.RawString(prefix[1:])
		out.String(string(in.ChatName))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChatUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChatUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChatUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChatUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels8(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels9(in *jlexer.Lexer, out *ChatInfoDTO) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "role":
			out.Role = string(in.String())
		case "users":
			if in.IsNull() {
				in.Skip()
				out.Users = nil
			} else {
				in.Delim('[')
				if out.Users == nil {
					if !in.IsDelim(']') {
						out.Users = make([]UserInChatDTO, 0, 1)
					} else {
						out.Users = []UserInChatDTO{}
					}
				} else {
					out.Users = (out.Users)[:0]
				}
				for !in.IsDelim(']') {
					var v19 UserInChatDTO
					(v19).UnmarshalEasyJSON(in)
					out.Users = append(out.Users, v19)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "messages":
			if in.IsNull() {
				in.Skip()
				out.Messages = nil
			} else {
				in.Delim('[')
				if out.Messages == nil {
					if !in.IsDelim(']') {
						out.Messages = make([]models.Message, 0, 0)
					} else {
						out.Messages = []models.Message{}
					}
				} else {
					out.Messages = (out.Messages)[:0]
				}
				for !in.IsDelim(']') {
					var v20 models.Message
					easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels(in, &v20)
					out.Messages = append(out.Messages, v20)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "send_notifications":
			out.SendNotifications = bool(in.Bool())
		case "files":
			if in.IsNull() {
				in.Skip()
				out.Files = nil
			} else {
				in.Delim('[')
				if out.Files == nil {
					if !in.IsDelim(']') {
						out.Files = make([]models.Payload, 0, 1)
					} else {
						out.Files = []models.Payload{}
					}
				} else {
					out.Files = (out.Files)[:0]
				}
				for !in.IsDelim(']') {
					var v21 models.Payload
					easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels1(in, &v21)
					out.Files = append(out.Files, v21)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "photos":
			if in.IsNull() {
				in.Skip()
				out.Photos = nil
			} else {
				in.Delim('[')
				if out.Photos == nil {
					if !in.IsDelim(']') {
						out.Photos = make([]models.Payload, 0, 1)
					} else {
						out.Photos = []models.Payload{}
					}
				} else {
					out.Photos = (out.Photos)[:0]
				}
				for !in.IsDelim(']') {
					var v22 models.Payload
					easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels1(in, &v22)
					out.Photos = append(out.Photos, v22)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels9(out *jwriter.Writer, in ChatInfoDTO) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"role\":"
		out.RawString(prefix[1:])
		out.String(string(in.Role))
	}
	{
		const prefix string = ",\"users\":"
		out.RawString(prefix)
		if in.Users == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v23, v24 := range in.Users {
				if v23 > 0 {
					out.RawByte(',')
				}
				(v24).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"messages\":"
		out.RawString(prefix)
		if in.Messages == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v25, v26 := range in.Messages {
				if v25 > 0 {
					out.RawByte(',')
				}
				easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels(out, v26)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"send_notifications\":"
		out.RawString(prefix)
		out.Bool(bool(in.SendNotifications))
	}
	{
		const prefix string = ",\"files\":"
		out.RawString(prefix)
		if in.Files == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v27, v28 := range in.Files {
				if v27 > 0 {
					out.RawByte(',')
				}
				easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels1(out, v28)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"photos\":"
		out.RawString(prefix)
		if in.Photos == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v29, v30 := range in.Photos {
				if v29 > 0 {
					out.RawByte(',')
				}
				easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels1(out, v30)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChatInfoDTO) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChatInfoDTO) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChatInfoDTO) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChatInfoDTO) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels9(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels1(in *jlexer.Lexer, out *models.Payload) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.URL = string(in.String())
		case "filename":
			out.Filename = string(in.String())
		case "size":
			out.Size = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels1(out *jwriter.Writer, in models.Payload) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"url\":"
		out.RawString(prefix[1:])
		out.String(string(in.URL))
	}
	{
		const prefix string = ",\"filename\":"
		out.RawString(prefix)
		out.String(string(in.Filename))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.Int64(int64(in.Size))
	}
	out.RawByte('}')
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels(in *jlexer.Lexer, out *models.Message) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "messageId":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.MessageId).UnmarshalText(data))
			}
		case "authorID":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.AuthorID).UnmarshalText(data))
			}
		case "branchId":
			if in.IsNull() {
				in.Skip()
				out.BranchID = nil
			} else {
				if out.BranchID == nil {
					out.BranchID = new(uuid.UUID)
				}
				if data := in.UnsafeBytes(); in.Ok() {
					in.AddError((*out.BranchID).UnmarshalText(data))
				}
			}
		case "text":
			out.Message = string(in.String())
		case "datetime":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.SentAt).UnmarshalJSON(data))
			}
		case "chatId":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.ChatId).UnmarshalText(data))
			}
		case "isRedacted":
			out.IsRedacted = bool(in.Bool())
		case "message_type":
			out.MessageType = string(in.String())
		case "parent_chat_id":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.ChatIdParent).UnmarshalText(data))
			}
		case "files":
			if in.IsNull() {
				in.Skip()
				out.FilesDTO = nil
			} else {
				in.Delim('[')
				if out.FilesDTO == nil {
					if !in.IsDelim(']') {
						out.FilesDTO = make([]models.Payload, 0, 1)
					} else {
						out.FilesDTO = []models.Payload{}
					}
				} else {
					out.FilesDTO = (out.FilesDTO)[:0]
				}
				for !in.IsDelim(']') {
					var v31 models.Payload
					easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels1(in, &v31)
					out.FilesDTO = append(out.FilesDTO, v31)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "photos":
			if in.IsNull() {
				in.Skip()
				out.PhotosDTO = nil
			} else {
				in.Delim('[')
				if out.PhotosDTO == nil {
					if !in.IsDelim(']') {
						out.PhotosDTO = make([]models.Payload, 0, 1)
					} else {
						out.PhotosDTO = []models.Payload{}
					}
				} else {
					out.PhotosDTO = (out.PhotosDTO)[:0]
				}
				for !in.IsDelim(']') {
					var v32 models.Payload
					easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels1(in, &v32)
					out.PhotosDTO = append(out.PhotosDTO, v32)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "sticker":
			out.Sticker = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels(out *jwriter.Writer, in models.Message) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"messageId\":"
		out.RawString(prefix[1:])
		out.RawText((in.MessageId).MarshalText())
	}
	{
		const prefix string = ",\"authorID\":"
		out.RawString(prefix)
		out.RawText((in.AuthorID).MarshalText())
	}
	{
		const prefix string = ",\"branchId\":"
		out.RawString(prefix)
		if in.BranchID == nil {
			out.RawString("null")
		} else {
			out.RawText((*in.BranchID).MarshalText())
		}
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"datetime\":"
		out.RawString(prefix)
		out.Raw((in.SentAt).MarshalJSON())
	}
	{
		const prefix string = ",\"chatId\":"
		out.RawString(prefix)
		out.RawText((in.ChatId).MarshalText())
	}
	{
		const prefix string = ",\"isRedacted\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsRedacted))
	}
	{
		const prefix string = ",\"message_type\":"
		out.RawString(prefix)
		out.String(string(in.MessageType))
	}
	{
		const prefix string = ",\"parent_chat_id\":"
		out.RawString(prefix)
		out.RawText((in.ChatIdParent).MarshalText())
	}
	{
		const prefix string = ",\"files\":"
		out.RawString(prefix)
		if in.FilesDTO == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v33, v34 := range in.FilesDTO {
				if v33 > 0 {
					out.RawByte(',')
				}
				easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels1(out, v34)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"photos\":"
		out.RawString(prefix)
		if in.PhotosDTO == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v35, v36 := range in.PhotosDTO {
				if v35 > 0 {
					out.RawByte(',')
				}
				easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels1(out, v36)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"sticker\":"
		out.RawString(prefix)
		out.String(string(in.Sticker))
	}
	out.RawByte('}')
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels10(in *jlexer.Lexer, out *ChatDTOOutput) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "chatId":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.ChatId).UnmarshalText(data))
			}
		case "chatName":
			out.ChatName = string(in.String())
		case "countOfUsers":
			out.CountOfUsers = int(in.Int())
		case "chatType":
			out.ChatType = string(in.String())
		case "lastMessage":
			easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels(in, &out.LastMessage)
		case "avatarPath":
			out.AvatarPath = string(in.String())
		case "send_notifications":
			out.SendNotifications = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels10(out *jwriter.Writer, in ChatDTOOutput) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"chatId\":"
		out.RawString(prefix[1:])
		out.RawText((in.ChatId).MarshalText())
	}
	{
		const prefix string = ",\"chatName\":"
		out.RawString(prefix)
		out.String(string(in.ChatName))
	}
	{
		const prefix string = ",\"countOfUsers\":"
		out.RawString(prefix)
		out.Int(int(in.CountOfUsers))
	}
	{
		const prefix string = ",\"chatType\":"
		out.RawString(prefix)
		out.String(string(in.ChatType))
	}
	{
		const prefix string = ",\"lastMessage\":"
		out.RawString(prefix)
		easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalMessagesModels(out, in.LastMessage)
	}
	{
		const prefix string = ",\"avatarPath\":"
		out.RawString(prefix)
		out.String(string(in.AvatarPath))
	}
	{
		const prefix string = ",\"send_notifications\":"
		out.RawString(prefix)
		out.Bool(bool(in.SendNotifications))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChatDTOOutput) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChatDTOOutput) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChatDTOOutput) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChatDTOOutput) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels10(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels11(in *jlexer.Lexer, out *ChatDTOInput) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "chatName":
			out.ChatName = string(in.String())
		case "chatType":
			out.ChatType = string(in.String())
		case "usersToAdd":
			if in.IsNull() {
				in.Skip()
				out.UsersToAdd = nil
			} else {
				in.Delim('[')
				if out.UsersToAdd == nil {
					if !in.IsDelim(']') {
						out.UsersToAdd = make([]uuid.UUID, 0, 4)
					} else {
						out.UsersToAdd = []uuid.UUID{}
					}
				} else {
					out.UsersToAdd = (out.UsersToAdd)[:0]
				}
				for !in.IsDelim(']') {
					var v37 uuid.UUID
					if data := in.UnsafeBytes(); in.Ok() {
						in.AddError((v37).UnmarshalText(data))
					}
					out.UsersToAdd = append(out.UsersToAdd, v37)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels11(out *jwriter.Writer, in ChatDTOInput) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"chatName\":"
		out.RawString(prefix[1:])
		out.String(string(in.ChatName))
	}
	{
		const prefix string = ",\"chatType\":"
		out.RawString(prefix)
		out.String(string(in.ChatType))
	}
	{
		const prefix string = ",\"usersToAdd\":"
		out.RawString(prefix)
		if in.UsersToAdd == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v38, v39 := range in.UsersToAdd {
				if v38 > 0 {
					out.RawByte(',')
				}
				out.RawText((v39).MarshalText())
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChatDTOInput) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChatDTOInput) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChatDTOInput) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChatDTOInput) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels11(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels12(in *jlexer.Lexer, out *ChatDAO) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ChatId":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.ChatId).UnmarshalText(data))
			}
		case "ChatName":
			out.ChatName = string(in.String())
		case "ChatTypeId":
			out.ChatTypeId = int(in.Int())
		case "AvatarURL":
			out.AvatarURL = string(in.String())
		case "ChatURLName":
			out.ChatURLName = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels12(out *jwriter.Writer, in ChatDAO) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ChatId\":"
		out.RawString(prefix[1:])
		out.RawText((in.ChatId).MarshalText())
	}
	{
		const prefix string = ",\"ChatName\":"
		out.RawString(prefix)
		out.String(string(in.ChatName))
	}
	{
		const prefix string = ",\"ChatTypeId\":"
		out.RawString(prefix)
		out.Int(int(in.ChatTypeId))
	}
	{
		const prefix string = ",\"AvatarURL\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	{
		const prefix string = ",\"ChatURLName\":"
		out.RawString(prefix)
		out.String(string(in.ChatURLName))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChatDAO) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChatDAO) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChatDAO) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChatDAO) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels12(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels13(in *jlexer.Lexer, out *Chat) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ChatId":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.ChatId).UnmarshalText(data))
			}
		case "ChatName":
			out.ChatName = string(in.String())
		case "ChatType":
			out.ChatType = string(in.String())
		case "AvatarURL":
			out.AvatarURL = string(in.String())
		case "ChatURLName":
			out.ChatURLName = string(in.String())
		case "SendNotifications":
			out.SendNotifications = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels13(out *jwriter.Writer, in Chat) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ChatId\":"
		out.RawString(prefix[1:])
		out.RawText((in.ChatId).MarshalText())
	}
	{
		const prefix string = ",\"ChatName\":"
		out.RawString(prefix)
		out.String(string(in.ChatName))
	}
	{
		const prefix string = ",\"ChatType\":"
		out.RawString(prefix)
		out.String(string(in.ChatType))
	}
	{
		const prefix string = ",\"AvatarURL\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	{
		const prefix string = ",\"ChatURLName\":"
		out.RawString(prefix)
		out.String(string(in.ChatURLName))
	}
	{
		const prefix string = ",\"SendNotifications\":"
		out.RawString(prefix)
		out.Bool(bool(in.SendNotifications))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Chat) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Chat) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Chat) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Chat) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels13(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels14(in *jlexer.Lexer, out *AddedUsersIntoChatDTO) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "addedUser":
			if in.IsNull() {
				in.Skip()
				out.AddedUsers = nil
			} else {
				in.Delim('[')
				if out.AddedUsers == nil {
					if !in.IsDelim(']') {
						out.AddedUsers = make([]uuid.UUID, 0, 4)
					} else {
						out.AddedUsers = []uuid.UUID{}
					}
				} else {
					out.AddedUsers = (out.AddedUsers)[:0]
				}
				for !in.IsDelim(']') {
					var v40 uuid.UUID
					if data := in.UnsafeBytes(); in.Ok() {
						in.AddError((v40).UnmarshalText(data))
					}
					out.AddedUsers = append(out.AddedUsers, v40)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "notAddedUser":
			if in.IsNull() {
				in.Skip()
				out.NotAddedUsers = nil
			} else {
				in.Delim('[')
				if out.NotAddedUsers == nil {
					if !in.IsDelim(']') {
						out.NotAddedUsers = make([]uuid.UUID, 0, 4)
					} else {
						out.NotAddedUsers = []uuid.UUID{}
					}
				} else {
					out.NotAddedUsers = (out.NotAddedUsers)[:0]
				}
				for !in.IsDelim(']') {
					var v41 uuid.UUID
					if data := in.UnsafeBytes(); in.Ok() {
						in.AddError((v41).UnmarshalText(data))
					}
					out.NotAddedUsers = append(out.NotAddedUsers, v41)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels14(out *jwriter.Writer, in AddedUsersIntoChatDTO) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"addedUser\":"
		out.RawString(prefix[1:])
		if in.AddedUsers == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v42, v43 := range in.AddedUsers {
				if v42 > 0 {
					out.RawByte(',')
				}
				out.RawText((v43).MarshalText())
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"notAddedUser\":"
		out.RawString(prefix)
		if in.NotAddedUsers == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v44, v45 := range in.NotAddedUsers {
				if v44 > 0 {
					out.RawByte(',')
				}
				out.RawText((v45).MarshalText())
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AddedUsersIntoChatDTO) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AddedUsersIntoChatDTO) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AddedUsersIntoChatDTO) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AddedUsersIntoChatDTO) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels14(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels15(in *jlexer.Lexer, out *AddUsersIntoChatDTO) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "usersId":
			if in.IsNull() {
				in.Skip()
				out.UsersId = nil
			} else {
				in.Delim('[')
				if out.UsersId == nil {
					if !in.IsDelim(']') {
						out.UsersId = make([]uuid.UUID, 0, 4)
					} else {
						out.UsersId = []uuid.UUID{}
					}
				} else {
					out.UsersId = (out.UsersId)[:0]
				}
				for !in.IsDelim(']') {
					var v46 uuid.UUID
					if data := in.UnsafeBytes(); in.Ok() {
						in.AddError((v46).UnmarshalText(data))
					}
					out.UsersId = append(out.UsersId, v46)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels15(out *jwriter.Writer, in AddUsersIntoChatDTO) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"usersId\":"
		out.RawString(prefix[1:])
		if in.UsersId == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v47, v48 := range in.UsersId {
				if v47 > 0 {
					out.RawByte(',')
				}
				out.RawText((v48).MarshalText())
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AddUsersIntoChatDTO) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AddUsersIntoChatDTO) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AddUsersIntoChatDTO) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AddUsersIntoChatDTO) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels15(l, v)
}
func easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels16(in *jlexer.Lexer, out *AddBranch) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.ID).UnmarshalText(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels16(out *jwriter.Writer, in AddBranch) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.RawText((in.ID).MarshalText())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AddBranch) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AddBranch) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson81810688EncodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AddBranch) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AddBranch) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson81810688DecodeGithubComGoParkMailRu20242EaglesDesignerMainAppInternalChatsModels16(l, v)
}
