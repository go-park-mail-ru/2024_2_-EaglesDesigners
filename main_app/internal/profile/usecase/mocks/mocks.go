// Code generated by MockGen. DO NOT EDIT.
// Source: usecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	reflect "reflect"

	models "github.com/go-park-mail-ru/2024_2_EaglesDesigner/main_app/internal/profile/models"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetProfileByUsername mocks base method.
func (m *MockRepository) GetProfileByUsername(ctx context.Context, id uuid.UUID) (models.ProfileDataDAO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileByUsername", ctx, id)
	ret0, _ := ret[0].(models.ProfileDataDAO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfileByUsername indicates an expected call of GetProfileByUsername.
func (mr *MockRepositoryMockRecorder) GetProfileByUsername(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileByUsername", reflect.TypeOf((*MockRepository)(nil).GetProfileByUsername), ctx, id)
}

// UpdateProfile mocks base method.
func (m *MockRepository) UpdateProfile(ctx context.Context, profile models.Profile) (*string, *string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfile", ctx, profile)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(*string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockRepositoryMockRecorder) UpdateProfile(ctx, profile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockRepository)(nil).UpdateProfile), ctx, profile)
}
